let cartToDisplay=buildCartFromStorage();const totalQuantity=document.getElementById("totalQuantity"),totalPrice=document.getElementById("totalPrice");async function buildHtmlStructure(cart){let htmlStructure=[];for(let i=0;i<cartToDisplay.length;i++){let itemToDisplay=cart[i],productConcerned=await getProductById(itemToDisplay.id);htmlStructure+=`\n      <article class="cart__item" data-id="${itemToDisplay.id}_${itemToDisplay.color}">\n          <div class="cart__item__img">\n              <img src="${productConcerned.imageUrl}">\n          </div>\n          <div class="cart__item__content">\n              <div class="cart__item__content__titlePrice">\n              <h2>${productConcerned.name} - ${itemToDisplay.color}</h2>\n              <p>${productConcerned.price} €</p>\n              </div>\n              <div class="cart__item__content__settings">\n              <div class="cart__item__content__settings__quantity">\n                  <p>Qté : </p>\n                  <input type="number" class="itemQuantity" name="itemQuantity" min="1" max="100" value="${itemToDisplay.quantity}">\n              </div>\n              <div class="cart__item__content__settings__delete">\n                  <p class="deleteItem">Supprimer</p>\n              </div>\n              </div>\n          </div>\n      </article>\n    `}return htmlStructure}let calculateNumberOfItems=cart=>{let numberOfItems=0;for(let item of cart)numberOfItems+=item.quantity;return numberOfItems},calculateCartTotalPrice=async cart=>{let cartTotalPrice=0;for(let item of cart){let productForTotalPriceCalculation;cartTotalPrice+=(await getProductById(item.id)).price*item.quantity}return cartTotalPrice};async function displayCart(){let cartHtmlStructure=await buildHtmlStructure(cartToDisplay);const cartItems=document.getElementById("cart__items");cartItems.innerHTML=cartHtmlStructure,totalQuantity.textContent=calculateNumberOfItems(cartToDisplay),totalPrice.textContent=await calculateCartTotalPrice(cartToDisplay),removeItemFromCart(),changeItemQuantity()}function removeItemFromCart(){const deleteButtons=document.getElementsByClassName("deleteItem");for(let deleteButton of deleteButtons)deleteButton.addEventListener("click",(async function(){let itemToDelete=deleteButton.closest("article"),itemToDeleteId=itemToDelete.dataset.id;console.log("id de l'élément deleteButton",itemToDeleteId),itemToDelete.remove(),localStorage.removeItem(itemToDeleteId),cartToDisplay=buildCartFromStorage(),totalQuantity.textContent=calculateNumberOfItems(cartToDisplay),totalPrice.textContent=await calculateCartTotalPrice(cartToDisplay)}))}function changeItemQuantity(){const quantityInputs=document.getElementsByClassName("itemQuantity");for(let quantityInput of quantityInputs)quantityInput.addEventListener("change",(async function(event){let newQuantity=parseInt(event.target.value);itemToModify=quantityInput.closest("article"),itemToModifyId=itemToModify.dataset.id,console.log("id de l'élément à modifier",itemToModifyId),quantityInput.setAttribute("value",newQuantity);let storageItemToModify=JSON.parse(localStorage.getItem(itemToModifyId));storageItemToModify.quantity=newQuantity,localStorage.setItem(itemToModifyId,JSON.stringify(storageItemToModify)),cartToDisplay=buildCartFromStorage(),totalQuantity.textContent=calculateNumberOfItems(cartToDisplay),totalPrice.textContent=await calculateCartTotalPrice(cartToDisplay)}))}displayCart();const orderButton=document.getElementById("order");let contactObject;const regexForNames=/^\b((?!-)(?!.*--)(?!')(?!.*'')[-A-ZÀ-ÿa-z. ']{2,20}(?<!-)(?<!'))$/,regexForEmail=/^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/g,regexForAddress=/^((?!-)(?!.*--)(?!')(?!.*'')[-A-ZÀ-ÿa-z0-9\s']{5,50}(?<!-)(?<!'))$/;class ContactObject{constructor(firstName,lastName,address,city,email){this.firstName=firstName,this.lastName=lastName,this.address=address,this.city=city,this.email=email}}let buildContactObject=()=>new ContactObject(document.getElementById("firstName").value,document.getElementById("lastName").value,document.getElementById("address").value,document.getElementById("city").value,document.getElementById("email").value);function checkIfFormInputIsValid(formInput,regex,textForErrorMsg){let formValue=document.getElementById(formInput).value;return""===formValue?(document.getElementById(`${formInput}ErrorMsg`).textContent=`Veuillez renseigner ${textForErrorMsg}.`,!1):!1===regex.test(formValue)?(document.getElementById(`${formInput}ErrorMsg`).textContent=`Veuillez renseigner ${textForErrorMsg} valide.`,!1):(document.getElementById(`${formInput}ErrorMsg`).textContent="",!0)}let checkIfFormIsValid=()=>{const isFirstNameValid=checkIfFormInputIsValid("firstName",regexForNames,"un prénom"),isLastNameValid=checkIfFormInputIsValid("lastName",regexForNames,"un nom"),isCityValid=checkIfFormInputIsValid("city",regexForNames,"une ville"),isAddressValid=checkIfFormInputIsValid("address",regexForAddress,"une adresse"),isEmailValid=checkIfFormInputIsValid("email",regexForEmail,"un email");return isFirstNameValid&&isLastNameValid&&isCityValid&&isAddressValid&&isEmailValid},checkIfIdOnList=(id,list)=>{let isIdOnList=!1,loopCount=0;for(;!isIdOnList&&loopCount<list.length;)isIdOnList=id===list[loopCount],loopCount++,console.log("passage dans le vérificateur");return isIdOnList};function buildItemsIdList(cart){let workingList=[];for(let item of cart)checkIfIdOnList(item.id,workingList)||workingList.push(item.id);return console.log("Liste d'id construite à partir du panier :",workingList),workingList}async function insertPost(dataToAdd){try{let response=await fetch("http://localhost:3000/api/products/order",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(dataToAdd)});if(response.ok){let addedData=await response.json();return console.log("Elément ajouté à l'API",addedData),addedData}console.log(response.status)}catch(error){console.log("Erreur lors de la tentative de POST : ",error)}}orderButton.addEventListener("click",(async function(event){if(event.preventDefault(),0===cartToDisplay.length)alert("Votre panier est vide. Veuillez y ajouter au moins un article pour valider la commande");else if(checkIfFormIsValid()&&confirm("Souhaitez vous valider la commande ?")){console.log("Récupération du formulaire : OK"),contactObject=buildContactObject(),console.log("Contact object",contactObject);let itemIdList=buildItemsIdList(cartToDisplay),objectToSend={contact:contactObject,products:itemIdList};console.log("Objet à envoyer au serveur",objectToSend),localStorage.setItem("objectToSend",JSON.stringify(objectToSend)),console.log("SessionStorage après stockage de l'objet à envoyer",localStorage);let order=await insertPost(objectToSend);console.log("id de la commande passée",order.orderId),window.location.href="confirmation.html?id="+order.orderId}else console.log("Récupération du formulaire : KO")}));